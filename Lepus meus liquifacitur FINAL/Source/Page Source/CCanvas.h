#ifndef _C_CCanvas#define _C_CCanvas#pragma once#include "LOffscreenView.h"#include "CShape.h"#include "CDocumentApp.h"#include "CShapeStore.h"//#include "DM.h" necessary?/* CCanvas * -----------------   Definition for CCanvas, which is what holds all the shapes. */class CCanvas : public LOffscreenView, public LCommander {protected:	CDocumentApp *app;	//BUNNY	CPageStore* thisPage;	//DM* data; possibly uneeded	public:	enum { class_ID = FOUR_CHAR_CODE('ccES') };		CCanvas(LStream *inStream);	~CCanvas();		void FinishCreateSelf();		void TellShapesEnter();	// sja/*	void FindCommandStatus(	PP_PowerPlant::CommandT	inCommand,	Boolean					&outEnabled,	Boolean					&outUsesMark,	PP_PowerPlant::Char16	&outMark,	Str255					outName);*/	bool FollowTheMouse(const SMouseDownEvent &inMouseDown, int tool);	void ClickSelf(const SMouseDownEvent &inMouseDown);	CShape *NewShapeByClass(int tool);		bool GetDirty() { 		return ((CDocumentApp *) GetTopCommander())->GetDirty(); 	}		void SetDirty(bool newDirty) { 		((CDocumentApp *) GetTopCommander())->SetDirty(newDirty);	}	void BeTarget();	CShapeInfo MakeInfo (CShapeStore* temp);	//BUNNY	//Constructor	CCanvas (int num, const SPaneInfo &inPaneInfo,					const SViewInfo &inViewInfo);	void getNewPageName(StringPtr outname);	void AdjustCursorSelf(Point inPortPt, const EventRecord& 	inMacEvent);		void SetShapes();	void getName(StringPtr outName);	void getPage(Int32& pageNum);	void SetName(StringPtr name);	void DrawSelf();	void AddShape(CShape* item);	void RemoveShape(CShape* item, bool rFD = true);	void removeMe();//	Boolean ObeyCommand(PP_PowerPlant::CommandT inCommand, void *ioParam);	void DeleteMyself();	void updatePlace(Point curMPt, CShape* dShape);	bool drop(Point curMPt, CShape* dShape);	void swapMeUp (CShape* shapetoBack);};#endif