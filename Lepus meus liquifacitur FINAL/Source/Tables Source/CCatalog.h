// =================================================================================//	CThreadWindow.h 				©1995-1998 Metrowerks Inc. All rights reserved.// =================================================================================#pragma once#include <LHierarchyTable.h>#include <LCommander.h>#include <LDragAndDrop.h>class STableItem;// A bookmark item stored in the table.struct STableItem {	DataIDT		mType;	Str255		mName;//	Str255		mLocation;		// Some constructors to make things easier.	STableItem();	STableItem( DataIDT inType );	STableItem( DataIDT inType, StringPtr inName);};class CCatalog : public LHierarchyTable, public LCommander,						public LDragAndDrop {public:	enum { class_ID = 'Book' };	static CCatalog *	CreateBookmarksTableStream( LStream *inStream );						CCatalog( LStream *inStream );	virtual				~CCatalog();	void FinishCreateSelf();	virtual void		ResizeFrameBy( Int16 inWidthDelta,							Int16 inHeightDelta, Boolean inRefresh );	virtual Boolean		HandleKeyPress( const EventRecord &inKeyEvent );	void UpdateWholeList();	void ClearWholeList();	void RemoveAllOfType(STableCell cell, DataIDT type);		void UpdatePicts(bool clear = false);	void UpdatePages(bool clear = false);	void UpdateSounds(bool clear = false);	void UpdateShapes(bool clear = false);	void EditRes(STableItem &ioItem, DataIDT type);	Boolean EditPictureDialog(STableItem	&ioItem);	Boolean EditSoundDialog(STableItem	&ioItem);	void EditPage(STableItem &ioItem, DataIDT type);	Boolean EditPageDialog(STableItem	&ioItem);		void HiliteCellDraw(const STableCell &inCell, RGBColor bgColor, RGBColor textColor);	// D&D	void HiliteDropArea(DragReference	inDragRef );	void InsideDropArea(DragReference	inDragRef );	void ReceiveDragItem(DragReference	inDragRef,			DragAttributes	inDragAttrs,		ItemReference	inItemRef,		Rect			&inItemBounds );	Boolean ItemIsAcceptable(		DragReference	inDragRef,		ItemReference	inItemRef );	void UnhiliteDropArea(DragReference	inDragRef);protected:	Uint16				mFirstIndent;	Uint16				mLevelIndent;	ResIDT				mGroupTextTraits;	ResIDT				mBookmarkTextTraits;	ResIDT				mGroupIconID;	ResIDT				mBookmarkIconID;	virtual void		DrawCell( const STableCell &inCell,							const Rect &inLocalRect );	virtual void		HiliteCellActively( const STableCell &inCell,							Boolean inHilite );	virtual void		HiliteCellInactively( const STableCell &inCell,							Boolean inHilite );	virtual void		ClickCell( const STableCell &inCell,							const SMouseDownEvent &inMouseDown );	Boolean				GetItemFromCell( const STableCell &inCell,							STableItem &outItem );private:	void				InitBookmarksTable( Int16 inCellHeight, Int16 inFirstIndent,							Int16 inLevelIndent, ResIDT inGroupTextTraits,							ResIDT inBookmarkTextTraits, ResIDT inGroupIconID,							ResIDT inBookmarkIconID );	STableItem picResGroup;	STableItem soundResGroup;	STableItem pageGroup;	STableItem shapeGroup;};