#include "CCatalogWin.h"#include "CDocumentApp.h"#include "TablesConstants.h"// gives pointer to the catalogCCatalog *CCatalogWin::getCatalog() {		return (CCatalog *)CDocumentApp::FindPaneInMyWindow(this,kBookmarksTable);		}void CCatalogWin::ClickInGoAway(const EventRecord &inMacEvent) {	#pragma unused (inMacEvent)	Hide();}void CCatalogWin::AttemptClose() { Hide(); }BooleanCCatalogWin::ObeyCommand(	CommandT	inCommand,	void		*ioParam ){	Boolean	cmdHandled = true;	switch ( inCommand ) {		case cmd_Close:			// don't ever close me, even though I'm targetable			cmdHandled = LCommander::ObeyCommand( inCommand, ioParam );			break;		default:			// Call inherited.			cmdHandled = LWindow::ObeyCommand( inCommand, ioParam );				break;	}	return cmdHandled;}voidCCatalogWin::FindCommandStatus(	PP_PowerPlant::CommandT	inCommand,	Boolean					&outEnabled,	Boolean					&outUsesMark,	PP_PowerPlant::Char16	&outMark,	Str255					outName){	switch (inCommand) {				case cmd_Close:			outEnabled = (LWindow::FindWindowByID(kBunnyWindowID) != NULL);			break;		default:			PP_PowerPlant::LWindow::FindCommandStatus(inCommand, outEnabled,												outUsesMark, outMark, outName);			break;	}}