#include "CToolPalette.h"#include "MiniConstants.h"#include "UReanimator.h"#include "CDocumentApp.h"#include "LRadioGroupView.h"#include "LGAColorSwatchControl.h"#include <TArray.h>#include <TArrayIterator.h>#include <typeinfo.h>/* CToolPalette * -----------------   Simple stream constructor */CToolPalette::CToolPalette(LStream *inStream) : LWindow(inStream) {}/* FinishCreate * -----------------   Initialize all the buttons when the palette has been created */void CToolPalette::FinishCreate() {	// This function call is needed, or else all of the buttons will be disabled	// when the palette is created. 	SuperEnable();			// Set the tool to arrow		rg = (LRadioGroupView *) CDocumentApp::FindPaneInMyWindow(this,kToolRadioGroup);	rg->SetCurrentRadioID(kTool1);	// Get the fore and frame colors	fore = (LGAColorSwatchControl *) CDocumentApp::FindPaneInMyWindow(this,kFore);	frame = (LGAColorSwatchControl *) CDocumentApp::FindPaneInMyWindow(this,kFrame);	topCommander = (LCommander *)	LCommander::GetTopCommander();}/* ClickInGoAway * -----------------   Don't close; hide */void CToolPalette::ClickInGoAway(							const EventRecord &inMacEvent) {	#pragma unused (inMacEvent)	Hide();}/* BeTarget * -----------------   I don't like to be the target; make the app the target instead */void CToolPalette::BeTarget() {	SwitchTarget(GetTopCommander());}/* GetForeColor * -----------------   Returns fore color */RGBColor CToolPalette::GetForeColor() {	RGBColor color;	fore->GetSwatchColor(color);		return color;}/* GetFrameColor * -----------------   Returns frame color */RGBColor CToolPalette::GetFrameColor() {	RGBColor color;	frame->GetSwatchColor(color);		return color;}/* GetToolPtr * -----------------   Given a tool ID, it returns a pointer to it */CToolPaletteButton *CToolPalette::GetToolPtr(int tool) {	CToolPaletteButton *b = (CToolPaletteButton *) CDocumentApp::FindPaneInMyWindow(this,tool);	Assert_(b != NULL);	return b;	}/* GetToolID * -----------------   Returns ID of selected tool */int CToolPalette::GetToolID() { return rg->GetCurrentRadioID(); }/* SetToolID * -----------------   Sets tool to be selected */void CToolPalette::SetToolID(int id) { rg->SetCurrentRadioID(id); }