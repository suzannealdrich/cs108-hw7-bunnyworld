#pragma once#include "LWindow.h"#include "CShape.h"#include "LListener.h"#include "LPopupButton.h"#include "LMultiPanelView.h"#include "CResDraw.h"#include "CEditField.h"#include "LCheckbox.h"#include "CResStore.h"#include "LEditText.h"// CPalette.h// send to have info palette display info about shape// typically called in ClickSelf// use setTarget(NULL) to deactive the palette// this will check and see if the shape is already the target.// if it is, then it won't redraw everything; just the coordinatesclass CPalette : public LWindow, public LListener {public:	enum { class_ID = FOUR_CHAR_CODE('cpAL') };	CPalette(LStream *inStream);	void setTargetShape(CShape *shape);	void FinishCreateSelf();	void ClickInGoAway(const EventRecord &inMacEvent);	void ListenToMessage(		PP_PowerPlant::MessageT		inMessage,		void						*ioParam );	CShape *getTargetShape();	void updatePopupValues();	void AttemptClose();	Boolean ObeyCommand(CommandT	inCommand, void		*ioParam );		// just for the CNameEditText guy	void setShapeName();protected:	StringPtr getPopupSelection(void *ioParam);	void setPopupSelection(StringPtr newPic);	TArray<LStr255*> *getPictsArray();	void disposeOfArray(TArray<LStr255*> *records);	void setCoordValues();	void setShapeCoordValues();	void setMoveable(bool moveable);	void setShapeMoveable(bool moveable);	void setVisible(bool visible);	void setShapeVisible(bool visible);		void setScript();	void setShapeScript();	void setName();private:	// send when you want to update the display of the tool palette	void updateInfoDisplay(bool refreshAll);	CShape *targetShape;	LPopupButton *thePopup;	LMultiPanelView *panel;	CEditField *scriptEdit;	LCheckBox *moveableBox;	LCheckBox *visibleBox;	LEditText *nameEdit;};