#include "CToolPaletteButton.h"/* CToolPaletteButton * -----------------   When creating button, add it to the LRadioGroupView */CToolPaletteButton::CToolPaletteButton(LStream *inStream) : LCicnButton(inStream) {	normalPict = ::GetCIcon(mNormalID);	pushedPict = ::GetCIcon(mPushedID);	rg = (LRadioGroupView *) GetSuperView();	rg->AddRadio(this);	SetValue(0);}/* ~CToolPaletteButton * -----------------   Diposes of the handles that were created */CToolPaletteButton::~CToolPaletteButton() {	// Free the handles	::DisposeCIcon(normalPict);	::DisposeCIcon(pushedPict);}/* DrawSelf * -----------------   How to draw a button */void CToolPaletteButton::DrawSelf() {	Rect	frame;	CalcLocalFrameRect(frame);	StColorPenState::Normalize();		// store the button pic handles if necessary	if (mNormalCicnH == nil) {				mNormalCicnH = normalPict;		mPushedCicnH = pushedPict;	}		//Draw	if (mNormalCicnH != nil) {		// if it's pressed, then the normal handle is now the pushed handle		if (LControl::GetValue() == 1) {			mNormalCicnH = pushedPict;		} else {			mNormalCicnH = normalPict;		}		::PlotCIcon(&frame, mNormalCicnH);	}		}/* HotSpotAction * -----------------   handles the drawing of button while mouse is down or over it. */void CToolPaletteButton::HotSpotAction(	SInt16		inHotSpot,	Boolean		inCurrInside,	Boolean		inPrevInside) {	mNormalCicnH = pushedPict;	LCicnButton::HotSpotAction(inHotSpot,inCurrInside,inPrevInside);	Refresh();}/* HotSpotResult * -----------------   If the click ends on the button, then set its value to 1, or checked */void CToolPaletteButton::HotSpotResult(	SInt16	inHotSpot) {		SetValue(1);	}/* SetValue * -----------------   Sets value of button */void	CToolPaletteButton::SetValue(								SInt32				inValue) {	if (inValue != GetValue()) {		if (inValue == 1) BroadcastMessage(msg_ControlClicked,this);		LControl::SetValue(inValue);		Refresh();	}								}