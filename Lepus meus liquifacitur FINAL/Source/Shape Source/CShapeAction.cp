#include "CShapeAction.h"#include "MiniConstants.h"#include "LCommander.h"/* CShapeAction * -----------------   Create new action */CShapeAction::CShapeAction(CShape *shape, CommandT command, Boolean alreadyDone, CCanvas *canvas) :	LAction(kUndoTextID, command - kUndoMessageFactor, alreadyDone) {		mShape = shape;		mShape->GetInfo(mOldInfo);		mCommand = command;		mCanvas = canvas;		mShapeID = mShape->ShapeID();	}/* UndoSelf * -----------------   Defines undo behavior. Note that delete and create are exactly opposite   for RedoSelf */void CShapeAction::UndoSelf() {	switch (mCommand) {			case kDeleteID:			// undoing delete, so must create			mShape = mCanvas->NewShapeByClass(mShapeID);			Assert_(mShape != NULL);			mShape->OrientFromInfo(mOldInfo);							break;		case kCreateID:			mShape->DeleteMyself(); // just delete		break;		default:					// default behavior for moving & color stuff					SShapeInfo newInfo;			mShape->GetInfo(newInfo);			mShape->OrientFromInfo(mOldInfo);			mOldInfo = newInfo;		break;	}}/* RedoSelf * -----------------   Defines redo behavior */void CShapeAction::RedoSelf() {	switch (mCommand) {			case kDeleteID:			// re-delete			mShape->DeleteMyself();		break;				case kCreateID: 			// re-create			mShape = mCanvas->NewShapeByClass(mShapeID);			Assert_(mShape != NULL);			mShape->OrientFromInfo(mOldInfo);		break;		default:			// default for move & color			SShapeInfo newInfo;			mShape->GetInfo(newInfo);			mShape->OrientFromInfo(mOldInfo);			mOldInfo = newInfo;		break;	}	}/* PostMyself * -----------------   Direct link to ccanvas's PostAction */void CShapeAction::PostMyself() {	mCanvas->PostAction(this);}