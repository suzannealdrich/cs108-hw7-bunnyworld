// CScriptAction.h#pragma once#include "LString.h"#include "CScanner.h"#include "MiniConstants.h"class CScriptAction {public:	//CScriptAction(ConstStringPtr action);	CScriptAction(CScanner *cs) {		LStr255 word;		cs->ReadNextToken(word);		LString::CopyPStr(word,mAction);		if (::EqualString(word,kActBeep,false,false)) {			LString::CopyPStr("\p",mData);		} else if (::EqualString(word,kActGoto,false,false)) {			cs->ReadNextToken(word);			if (::EqualString(word,"\ppage",false,false)) { // if they say 'goto page 1', skip the 'page' part!				cs->ReadNextToken(word);			}			LString::CopyPStr(word,mData);		} else {			cs->ReadNextToken(word);			LString::CopyPStr(word,mData);		}	}			virtual Boolean isGoto(StringPtr page) { 		return isHelper(kActGoto,page);	}	virtual Boolean isPlay(StringPtr sound){ 		return isHelper(kActPlay,sound);	}		virtual Boolean isHide(StringPtr shape){ 		return isHelper(kActHide,shape);	}		virtual Boolean isShow(StringPtr shape){ 		return isHelper(kActShow,shape);	}		virtual Boolean isBeep(){ 		LStr255 blank;		return isHelper(kActBeep,blank);	}	protected:	Str255 mAction;	Str255 mData;	Boolean isHelper(ConstStringPtr target, StringPtr outStr) {		if (::EqualString(target,mAction,false,false)) {			LString::CopyPStr(mData,outStr);			return true;		}		return false;	}};