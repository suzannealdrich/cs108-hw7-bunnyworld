// DM.h#pragma once#include <TArray.h>#include <TArrayIterator.h>class LFileStream;class CPageStore;class CShapeStore;class CResStore;class DM {public:	DM();		~DM();		void ReadFromFile(LFileStream* file);		void WriteToFile(LFileStream* file);		// pages		int getTotalPages();		CPageStore* newPageStore();		CPageStore* getPageStore(Int32 pageNum);		// if non-existant, then return NULL		CPageStore* getPageStore(ConstStringPtr name);		TArray<CShapeStore*> getShapesInPage(Int32 pageNum);		TArray<CPageStore*> getPageList();		void removePageStore(Int32 pageNum);		// shapes		int getTotalShapes();		CShapeStore* newShapeStore();		CShapeStore* getShapeStore(ConstStringPtr name);		TArray<CShapeStore*> getShapeList();		void removeShapeStore(ConstStringPtr name);		// resources		int getTotalPicts();		int getTotalSounds();		CResStore* newResStore(ConstStringPtr type);		CResStore* getPictResStore(ConstStringPtr name);	CResStore* getSoundResStore(ConstStringPtr name);	TArray<CResStore*> getPictList();		TArray<CResStore*> getSoundList();		void removeResStore(ConstStringPtr name);	private:		#pragma warn_hidevirtual off	// bypass some warnings the TArray causes	TArray<CPageStore*> mPages;		TArray<CShapeStore*> mShapes;		TArray<CResStore*> mPicts;		TArray<CResStore*> mSounds;	#pragma warn_hidevirtual reset		void removeAllStores();};const ConstStringPtr TYPE		= "\ptype";const ConstStringPtr PAGE		= "\ppage";const ConstStringPtr SHAPE		= "\pshape";const ConstStringPtr SOUND		= "\psound";const ConstStringPtr kPICT		= "\ppict";const ConstStringPtr NAME		= "\pname";const ConstStringPtr PAGENUM	= "\ppagenum";